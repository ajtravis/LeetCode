class Solution:
    def diagonalPrime(self, nums: List[List[int]]) -> int:
        
        def is_prime(number):
            if number <= 1:
                return False
            if number <= 3:
                return True

            if number % 2 == 0 or number % 3 == 0:
                return False

            i = 5
            while i * i <= number:
                if number % i == 0 or number % (i + 2) == 0:
                    return False
                i += 6
            return True
            
        def is_diag(i, val):
            if nums[i][i] == val:
                return True
            elif nums[i][len(nums) - i - 1] == val:
                return True
            else:
                return False
        
        i = 0
        high_num = 0
        while i < len(nums):
            j = 0;
            while j < len(nums[i]):
                n = nums[i][j]
                if is_prime(n) and is_diag(i, n) and n > high_num:
                    high_num = n
                j+=1
            i += 1
        return high_num
