class Solution:
    def shipWithinDays(self, weights: List[int], days: int) -> int:
        def is_feasible(capacity):
        days_needed = 1
        current_weight = 0

        for weight in weights:
            if current_weight + weight > capacity:
                days_needed += 1
                current_weight = 0

            current_weight += weight

        return days_needed <= days

    left, right = max(weights), sum(weights)

    while left < right:
        mid = left + (right - left) // 2

        if is_feasible(mid):
            right = mid
        else:
            left = mid + 1

    return left
